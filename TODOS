Or:


3* Implement checking if a container has wrong id

4* Count amount of operations per travel
5* Accredit Crane with actual ship operations
6* Add a shipPlan copy to class Algorithm


* Create more travel input folders and expected output folder
8* write testers that verify the results (test also error handling!!)


Allen:

1* In case the number of “Containers awaiting at port” files for port P is less than the number of
   times P appears in the route file (not counting last stop, if this port is the last stop of the
   route): It shall be considered that in the last visits (==number of “missing files”) of the ship to
   port P, no cargo is to be loaded onto it, and cargo is only to be unloaded at destination P for
   those visits - if applicable. A proper warning should be printed to screen for a corresponding
   missing “Containers awaiting at port” file ( except for the last stop in the route which shall not
   have a file ).




* What to in case of reject? is the algortihm is interactive

Together:
3* Write simulation result file
4* Read again very sourly the EX1 and Input/Output instructions and see we meet all the requirements
5* Add an abstract "Algorithm" class and set the naive algorithms to inherit from it
6* decouple the algorithm and the simulator










